<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- saved from url=(0043)http://www.faqs.org/patents/app/20080222114 -->
<HTML><HEAD><META http-equiv="Content-Type" content="text/html; charset=UTF-8">
  <META http-equiv="X-UA-Compatible" content="IE=7">

  <TITLE>EFFICIENT DIRECTED ACYCLIC GRAPH REPRESENTATION - Patents</TITLE>
  <LINK rel="stylesheet" type="text/css" href="./0287 EFFICIENT DIRECTED ACYCLIC GRAPH REPRESENTATION - Patents_files/style.css">
  
  <META http-equiv="Content-Language" content="en">
  <META name="Keywords" content="">
  <META name="Description" content="">
  <META name="robots" content="index, follow">
  <META name="revisit-after" content="1 days">

<STYLE type="text/css">.Comments_message {text-align:center;color:White;background-color:#CC3300;width:80%;padding:10px;margin-left:auto;margin-right:auto;margin-bottom:5px;}#Comments_form input { margin-left:10px;margin-right:10px;margin-top:5px;display:block;width:150px;}#Comments_form textarea { margin-left:10px;display:block;width:800px;height:140px;}#Comments_form div.Comments_name {float:left;}#Comments_form div.Comments_mail {float:left;}#Comments_form div.Comments_text {clear:left;}#Comments_form div.Comments_captcha { float:left;}#Comments_form img.Comments_captcha { margin-left:10px;margin-top:15px;}div.Comments_form {width:96%; padding:20px; margin: auto auto 50px;}div.Comments_commentsbox {width:100%;margin:auto;padding:4px;margin-bottom:4px;line-height:normal;}div.Comments_comment {width:96%; border-top: 4px solid #C4DAE5; border-right: 1px solid #E8F1F7; border-left: 1px solid #E8F1F7; padding:2px; padding-top:8px;  margin: auto; background-repeat:repeat-x;background-position:top;margin-bottom:12px; background-color:#FBFBFB;}div.Comments_comment div.Comments_info {height:28px;overflow:hidden;position:relative;top:-17px;}div.Comments_comment div.Comments_link  { z-index:2;text-align:center;width:13px;position:relative;left:5px;top:-17px;}div.Comments_comment a.Comments_link   { font-family:Tahoma,Arial;font-weight:bold;text-decoration:none;color:#CC0000;font-size:7pt;}div.Comments_comment div.Comments_balloon { z-index:1;width:23px;height:21px;position:relative;top:0px;}div.Comments_comment div.Comments_date {float:right;font-family:Tahoma,Arial;font-size:7pt;color:gray;display:inline;position:relative;top:-30px;left:-7px;}div.Comments_comment div.Comments_moderate {float:right;display:inline;position:relative;top:-29px;left:-2px;}div.Comments_comment div.Comments_user { font-family:Tahoma,Arial;font-size:8pt;display:inline;position:relative;top:-19px;left:29px;}div.Comments_comment div.Comments_text { margin-left:30px;color:#666666;position:relative;top:-10px;font-size:96%;}div.Comments_comment div.Comments_clear {clear:both;line-height:1px;height:1px;display:inline;}</STYLE><SCRIPT language="JavaScript" type="text/javascript">
//<![CDATA[
function confirmModerate(url,num,pid){
  url = url + '?Comments[do]=mod&Comments[pid]=' + pid + '&Comments[id]=' + num + '#Comments_' + num;
  if (confirm('Do you want to report this comment as inappropriate?')) location.href=url;
  return 0;
}
function validate_form(frm) {
  var value = '';
  var errFlag = new Array();
  _qfMsg = '';

  value = frm.elements['Comments[name]'].value;
  if (value == '' && !errFlag['name']) {
    errFlag['name'] = true;
    _qfMsg = _qfMsg + '\n - Please enter your name';
  }

  value = frm.elements['Comments[captcha]'].value;
  if (value == '' && !errFlag['captcha']) {
    errFlag['captcha'] = true;
    _qfMsg = _qfMsg + '\n - Please enter Security Code';
  }

  value = frm.elements['Comments[mail]'].value;
  if (value == '' && !errFlag['mail']) {
    errFlag['mail'] = true;
    _qfMsg = _qfMsg + '\n - Please enter your e-mail';
  }
  var regex = /^((\"[^\"\f\n\r\t\v\b]+\")|([\w\!\#\$\%\&'\*\+\-\~\/\^\`\|\{\}]+(\.[\w\!\#\$\%\&'\*\+\-\~\/\^\`\|\{\}]+)*))@((\[(((25[0-5])|(2[0-4][0-9])|([0-1]?[0-9]?[0-9]))\.((25[0-5])|(2[0-4][0-9])|([0-1]?[0-9]?[0-9]))\.((25[0-5])|(2[0-4][0-9])|([0-1]?[0-9]?[0-9]))\.((25[0-5])|(2[0-4][0-9])|([0-1]?[0-9]?[0-9])))\])|(((25[0-5])|(2[0-4][0-9])|([0-1]?[0-9]?[0-9]))\.((25[0-5])|(2[0-4][0-9])|([0-1]?[0-9]?[0-9]))\.((25[0-5])|(2[0-4][0-9])|([0-1]?[0-9]?[0-9]))\.((25[0-5])|(2[0-4][0-9])|([0-1]?[0-9]?[0-9])))|((([A-Za-z0-9\-])+\.)+[A-Za-z\-]+))$/;
  if (value != '' &&!regex.test(value) && !errFlag['mail']) {
    errFlag['mail'] = true;
    _qfMsg = _qfMsg + '\n - E-mail address format is invalid';
  }

  value = frm.elements['Comments[text]'].value;
  if (value == '' && !errFlag['text']) {
    errFlag['text'] = true;
    _qfMsg = _qfMsg + '\n - Please enter your comment';
  }
  if (value.length<50 && !errFlag['text']) {
    errFlag['text'] = true;
    _qfMsg = _qfMsg + '\n - Comment is too short (50 characters min.)';
  }
  if (value.length>4000 && !errFlag['text']) {
    errFlag['text'] = true;
    _qfMsg = _qfMsg + '\n - Comment is too long (4000 characters max)';
  }

  if (_qfMsg != '') {
    _qfMsg = 'Invalid information entered:' + _qfMsg + '\nPlease correct these fields.';
    alert(_qfMsg);
    return false;
  }
  return true;
}
//]]>
</SCRIPT>

</HEAD><BODY>
  <DIV id="hback">
    <A href="http://www.faqs.org/patents/" title="Patents - stay tuned to the technology"><IMG src="./0287 EFFICIENT DIRECTED ACYCLIC GRAPH REPRESENTATION - Patents_files/header.logo.png" id="hlogo" alt="Patents - stay tuned to the technology" border="0"></A>

<FORM action="http://www.faqs.org/patents/search.html" style="margin:0px;" id="cse-search-box">
    <INPUT type="hidden" name="cx" value="012585674615115756003:qkbgwdz4cgu">
    <INPUT type="hidden" name="cof" value="FORID:11">
    <INPUT type="hidden" name="ie" value="UTF-8">
<TABLE border="0" align="right" style="margin-top:5px;margin-right:5px;color:white;">
 <TBODY><TR>
  <TD>
   <INPUT type="text" name="q" style="border-top-width: 1px; border-right-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-top-style: solid; border-right-style: solid; border-bottom-style: solid; border-left-style: solid; border-top-color: rgb(126, 157, 185); border-right-color: rgb(126, 157, 185); border-bottom-color: rgb(126, 157, 185); border-left-color: rgb(126, 157, 185); padding-top: 2px; padding-right: 2px; padding-bottom: 2px; padding-left: 2px; background-image: url(http://www.google.com/coop/intl/en/images/google_custom_search_watermark.gif); background-repeat: no-repeat; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: rgb(255, 255, 255); background-position: 0&percnt; 50&percnt;; ">
  </TD>
  <TD>
   <INPUT type="submit" name="sa" value="Search">
  </TD>
 </TR>
</TBODY></TABLE>
</FORM>
<SCRIPT type="text/javascript" src="./0287 EFFICIENT DIRECTED ACYCLIC GRAPH REPRESENTATION - Patents_files/brand"></SCRIPT>

  </DIV>
  <DIV id="main_body">
  
  <TABLE align="center" cellpadding="10" style="border:1px solid #DEEBF8;background-color:#F5F8FF;width:700px;"><TBODY><TR>
    <TD><H2 class="menu1"><A href="http://www.faqs.org/patents/invl/a">Inventors list</A></H2></TD>
    <TD><H2 class="menu1"><A href="http://www.faqs.org/patents/agnl/a">Agents list</A></H2></TD>
    <TD><H2 class="menu1"><A href="http://www.faqs.org/patents/asnl/a">Assignees list</A></H2></TD>
    <TD><H2 class="menu1"><A href="http://www.faqs.org/patents/city/_all">List by place</A></H2></TD>
  </TR></TBODY></TABLE>
  <TABLE align="center" cellpadding="10" style="border:1px solid #F8DEDE;background-color:#FFF5F5;margin-top:10px;width:700px;"><TBODY><TR>
    <TD><H3 class="menu2"><A href="http://www.faqs.org/patents/class/_all">Classification tree browser</A></H3></TD>
    <TD><H3 class="menu2"><A href="http://www.faqs.org/patents/invl/00000">Top 100 Inventors</A></H3></TD>
    <TD><H3 class="menu2"><A href="http://www.faqs.org/patents/agnl/00000">Top 100 Agents</A></H3></TD>
    <TD><H3 class="menu2"><A href="http://www.faqs.org/patents/asnl/00000">Top 100 Assignees</A></H3></TD>
  </TR></TBODY></TABLE>


  <TABLE align="center" cellpadding="10" style="border:1px solid #F8DEDE;background-color:#FFF5F5;margin-top:10px;margin-bottom:20px;width:700px;"><TBODY><TR>
    <TD><H3 class="menu2"><A href="http://www.faqs.org/faqs/">Usenet FAQ Index</A></H3></TD>
    <TD><H3 class="menu2"><A href="http://www.faqs.org/docs/">Documents</A></H3></TD>
    <TD><H3 class="menu2"><A href="http://www.faqs.org/contrib/">Other FAQs</A></H3></TD>
  </TR></TBODY></TABLE>


<H1 align="center">Patent title: <FONT size="+1">EFFICIENT DIRECTED ACYCLIC GRAPH REPRESENTATION</FONT></H1>
<H2>
Inventors:
<FONT size="+1">&nbsp;<A href="http://www.faqs.org/patents/inv/58530">Zvi Schreiber</A></FONT>
<BR>Agents:
<FONT size="+1">&nbsp;<A href="http://www.faqs.org/patents/agn/4192">SIMON KAHN - PYI Tech, Ltd.;c/o LANDONIP, INC</A></FONT>
<BR>Assignees:
<FONT size="+1">&nbsp;<A href="http://www.faqs.org/patents/asn/6190">GHOST INC.</A></FONT>
<BR>Origin: <FONT size="+1"><A href="http://www.faqs.org/patents/city/us_va_alexandria">ALEXANDRIA, VA US</A></FONT>
<BR>IPC8 Class: <FONT size="+1">AG06F706FI</FONT>
<BR>USPC Class: <FONT size="+1">
  707  3</FONT>
</H2>
<HR>  <BR><SCRIPT language="JavaScript">
<!--
function google_ad_request_done(google_ads) { var i;
if (google_ads.length>0) document.write('<a href=\"' + google_info.feedback_url + '\" style=\"color:black; text-decoration:none\" onMouseOver=\"this.style.textDecoration=\'underline\'\" onMouseOut=\"this.style.textDecoration=\'none\'\"><b>Ads by Google</b></a>');

for(i = 0; i < google_ads.length && i < 3; ++i) { 
document.write('<br><a href=' +
google_ads[i].url 
+ ' onMouseOver="window.status=\''
+ google_ads[i].visible_url
+ '\'; return true"'
+ ' onMouseout="window.status=\'\'; return true"'

+'>' + '<b>' + 
google_ads[i].line1 +
'</b></a>'
+ '  - '

+ google_ads[i].line2 + ' ' + google_ads[i].line3 + ''+

' - <font size=\"-1\"><a class=\"red\" href=' + google_ads[i].url

+ ' onMouseOver="window.status=\''
+ google_ads[i].visible_url
+ '\'; return true"'
+ ' onMouseout="window.status=\'\'; return true"'

+ '>' +
google_ads[i].visible_url +
'</a></font><br>'
); 
} }

// -->
</SCRIPT>

<SCRIPT type="text/javascript"><!--
google_ad_client = "pub-5788426211617053";
google_ad_channel = "0173093054";
google_ad_output = "js";
google_feedback = "on"
//--></SCRIPT> <SCRIPT type="text/javascript" src="./0287 EFFICIENT DIRECTED ACYCLIC GRAPH REPRESENTATION - Patents_files/show_ads.js">
</SCRIPT><SCRIPT src="./0287 EFFICIENT DIRECTED ACYCLIC GRAPH REPRESENTATION - Patents_files/test_domain.js"></SCRIPT><SCRIPT>window.google_render_ad();</SCRIPT><SCRIPT language="JavaScript1.1" src="./0287 EFFICIENT DIRECTED ACYCLIC GRAPH REPRESENTATION - Patents_files/ads"></SCRIPT><A href="http://services.google.com/feedback/abg?url=http://www.faqs.org/patents/app/20080222114&hl=en&client=ca-pub-5788426211617053&adU=www.cyber-wit.com&adT=DataScene+Plotting&adU=www.synametrics.com&adT=Database+Management&adU=big.faceless.org&adT=BFO+Java+Graph+Library&adU=www.ArtTactic.com&adT=ArtTactic:+Art+Markets&adU=www.ideaconnection.com&adT=New+Inventions&adU=www.advsofteng.com&adT=Chart+and+Graph+Component&adU=www.impactregister.com&adT=Impact/+Shock+Recorder&adU=www.yworks.com/products/yed&adT=Free+Graph+Creator&adU=www.ClusterResources.com&adT=HPC+Management+with+Moab&adU=FT.com&adT=Interest+Rate+Graph&adU=www.ExportTrader.com&adT=Export+used+cars+from+USA&adU=www.devart.com&adT=Diagram+for+My+SQL&adU=www.healthline.com/symptomsearch&adT=Tender+Lymph+Nodes&adU=www.porath.com&adT=Fiscal+Representative&adU=www.goldengate.com&adT=Real-time+Reporting&adU=www.digitizeit.de&adT=Digitize-It&adU=www.buyerrepresentation.com&adT=BuyerRepresentation.com&adU=www.southaspect.com&adT=.net+sql+builder&adU=BizTree.com&adT=Patent+Licensing&adU=www.cmgsrl.it&adT=edge+polishing+machine&done=1" style="color:black; text-decoration:none" onmouseover="this.style.textDecoration=&#39;underline&#39;" onmouseout="this.style.textDecoration=&#39;none&#39;"><B>Ads by Google</B></A><BR><A href="http://googleads.g.doubleclick.net/aclk?sa=l&ai=BCC_x-9PTSaLgDMfX_AbIktmtA_yxtG30n4_2DMCNtwGQkhQQARgBIIGm9AEoFDgAUNz9it0EYOXI2oCMArIBDHd3dy5mYXFzLm9yZ8gBAdoBK2h0dHA6Ly93d3cuZmFxcy5vcmcvcGF0ZW50cy9hcHAvMjAwODAyMjIxMTSoAwHoAx_oA7MB6AOqA-gD1wLoA7gD9QMAAAAEmAQA&num=1&sig=AGiWqtyL6Icx3VIYKuO9y_aybGAHpk4Hgw&client=ca-pub-5788426211617053&adurl=http://www.cyber-wit.com/products_DataScene.html" onmouseover="window.status=&#39;www.cyber-wit.com&#39;; return true" onmouseout="window.status=&#39;&#39;; return true"><B>DataScene Plotting</B></A>  - 2D &amp; 3D graphs w/ the best quality. Analysis &amp; animation. $49 Students. - <FONT size="-1"><A class="red" href="http://googleads.g.doubleclick.net/aclk?sa=l&ai=BCC_x-9PTSaLgDMfX_AbIktmtA_yxtG30n4_2DMCNtwGQkhQQARgBIIGm9AEoFDgAUNz9it0EYOXI2oCMArIBDHd3dy5mYXFzLm9yZ8gBAdoBK2h0dHA6Ly93d3cuZmFxcy5vcmcvcGF0ZW50cy9hcHAvMjAwODAyMjIxMTSoAwHoAx_oA7MB6AOqA-gD1wLoA7gD9QMAAAAEmAQA&num=1&sig=AGiWqtyL6Icx3VIYKuO9y_aybGAHpk4Hgw&client=ca-pub-5788426211617053&adurl=http://www.cyber-wit.com/products_DataScene.html" onmouseover="window.status=&#39;www.cyber-wit.com&#39;; return true" onmouseout="window.status=&#39;&#39;; return true">www.cyber-wit.com</A></FONT><BR><BR><A href="http://googleads.g.doubleclick.net/aclk?sa=l&ai=Be0xE-9PTSaLgDMfX_AbIktmtA93yrg6hpZWTAcCNtwGQvwUQAhgCIIGm9AEoFDgAUOiT88kCYOXI2oCMAqAB4Le__wOyAQx3d3cuZmFxcy5vcmfIAQHaAStodHRwOi8vd3d3LmZhcXMub3JnL3BhdGVudHMvYXBwLzIwMDgwMjIyMTE0qAMB6AMf6AOzAegDqgPoA9cC6AO4A_UDAAAABJgEAA&num=2&sig=AGiWqtyvJjIJ_iEIGTyFq1lQGkIbFBt0FA&client=ca-pub-5788426211617053&adurl=http://www.synametrics.com/SynametricsWebApp/WinSQL.jsp%3Frefid%3Dgoogle" onmouseover="window.status=&#39;www.synametrics.com&#39;; return true" onmouseout="window.status=&#39;&#39;; return true"><B>Database Management</B></A>  - WinSQL - A Homogeneous Solution for Heterogeneous Environment. - <FONT size="-1"><A class="red" href="http://googleads.g.doubleclick.net/aclk?sa=l&ai=Be0xE-9PTSaLgDMfX_AbIktmtA93yrg6hpZWTAcCNtwGQvwUQAhgCIIGm9AEoFDgAUOiT88kCYOXI2oCMAqAB4Le__wOyAQx3d3cuZmFxcy5vcmfIAQHaAStodHRwOi8vd3d3LmZhcXMub3JnL3BhdGVudHMvYXBwLzIwMDgwMjIyMTE0qAMB6AMf6AOzAegDqgPoA9cC6AO4A_UDAAAABJgEAA&num=2&sig=AGiWqtyvJjIJ_iEIGTyFq1lQGkIbFBt0FA&client=ca-pub-5788426211617053&adurl=http://www.synametrics.com/SynametricsWebApp/WinSQL.jsp%3Frefid%3Dgoogle" onmouseover="window.status=&#39;www.synametrics.com&#39;; return true" onmouseout="window.status=&#39;&#39;; return true">www.synametrics.com</A></FONT><BR><BR><A href="http://googleads.g.doubleclick.net/aclk?sa=l&ai=BCWG2-9PTSaLgDMfX_AbIktmtA6Lr-TXms8yYA8CNtwGA8QQQAxgDIIGm9AEoFDgAUK754KP4_____wFg5cjagIwCoAGDsZP_A7IBDHd3dy5mYXFzLm9yZ8gBAdoBK2h0dHA6Ly93d3cuZmFxcy5vcmcvcGF0ZW50cy9hcHAvMjAwODAyMjIxMTSAAgGoAwHoAx_oA7MB6AOqA-gD1wLoA7gD9QMAAAAEmAQA&num=3&sig=AGiWqtzqJK1J8VTTHhJzkzZN0Q6qQH-PIQ&client=ca-pub-5788426211617053&adurl=http://big.faceless.org/products/graph/%3Frefer%3Dgoogle" onmouseover="window.status=&#39;big.faceless.org&#39;; return true" onmouseout="window.status=&#39;&#39;; return true"><B>BFO Java Graph Library</B></A>  - Create Impressive Graphs and Charts Fast Java 3D Engine. Free Trial. - <FONT size="-1"><A class="red" href="http://googleads.g.doubleclick.net/aclk?sa=l&ai=BCWG2-9PTSaLgDMfX_AbIktmtA6Lr-TXms8yYA8CNtwGA8QQQAxgDIIGm9AEoFDgAUK754KP4_____wFg5cjagIwCoAGDsZP_A7IBDHd3dy5mYXFzLm9yZ8gBAdoBK2h0dHA6Ly93d3cuZmFxcy5vcmcvcGF0ZW50cy9hcHAvMjAwODAyMjIxMTSAAgGoAwHoAx_oA7MB6AOqA-gD1wLoA7gD9QMAAAAEmAQA&num=3&sig=AGiWqtzqJK1J8VTTHhJzkzZN0Q6qQH-PIQ&client=ca-pub-5788426211617053&adurl=http://big.faceless.org/products/graph/%3Frefer%3Dgoogle" onmouseover="window.status=&#39;big.faceless.org&#39;; return true" onmouseout="window.status=&#39;&#39;; return true">big.faceless.org</A></FONT><BR> <BR>


<HR><H2>Abstract:<BR></H2>
An efficient representation of a changing directed acyclic graph (DAG) in
     a computer system. A representation of all the paths in the DAG are
     stored in memory and kept synchronized with the representation of the DAG
     which may change over time. This allows some important queries to be
     performed very quickly such as finding all the descendants of a node.<H2>Claims:<BR></H2>
<B>1.</B> A computer implemented method of persisting directed acylic graphs,
     comprising:storing all paths of the directed acyclic graph; andstoring
     all details of the stored paths.
<BR><BR><B>2.</B> A computer implemented method according to claim 1, further
     comprising:querying, in the event of a removal of an edge, said stored
     paths to identify paths including said removed edge;removing, responsive
     to said query of said stored paths, said identified paths including said
     removed edge from said stored paths;querying, in the event of a removal
     of an edge, said stored path details to identify paths including said
     removed edge; andremoving, responsive to said query of said stored path
     details, said identified paths including said removed edge, from said
     stored details.
<BR><BR><B>3.</B> A computer implemented method according to claim 2, further comprising
     in the event of a removal of an edge, updating a transitive closure
     table.
<BR><BR><B>4.</B> A computer implemented method according to claim 2, further
     comprising:identifying, in the event of an addition an edge, every path
     whose end point is the added edge and every path whose start point is the
     added edge;computing all the combinations of said every path whose end
     point is the added edge and said every path whose start point is the
     added edgestoring a paths for each said combination; andstoring the
     details of said identified paths.
<BR><BR><B>5.</B> A computer implemented method according to claim 4, further comprising
     in the event of an addition of an edge, updating a transitive closure
     table.
<BR><BR><B>6.</B> A computer implemented method according to claim 1, further
     comprising:identifying, in the event of an addition an edge, every path
     whose end point is the added edge and every path whose start point is the
     added edge;determining all the combinations of said identified paths
     whose end point is the added edge and said identified paths whose start
     point is the added edge;storing each of said determined combinations as a
     path; andstoring the details of said determined combination paths.
<BR><BR><B>7.</B> A computer implemented method according to claim 6, further comprising
     in the event of an addition of an edge, updating a transitive closure
     table.
<BR><BR><B>8.</B> A computer implemented method according to claim 1, wherein at least
     some nodes of the directed acyclic graph nodes are folders in a file
     system.
<BR><BR><B>9.</B> A computer implemented method according to claim 1, wherein at least
     some nodes in the DAG are classes in an object oriented class inheritance
     heirarchy.
<BR><BR><B>10.</B> A computer-readable medium containing instructions for controlling a
     data processing system to perform a computer implemented method of
     persisting directed acylic graphs, the computer implemented method
     comprising:storing all paths of the directed acylic graph; andstoring all
     details of the stored paths.
<BR><BR><B>11.</B> A computer-readable medium according to claim 10, wherein the method
     further comprises:querying, in the event of a removal of an edge, said
     stored paths to identify paths including said removed edge;removing,
     responsive to said query of said stored paths, said identified paths
     including said removed edge from said stored paths;querying, in the event
     of a removal of an edge, said stored path details to identify paths
     including said removed edge; andremoving, responsive to said query of
     said stored path details, said identified paths including said removed
     edge, from said stored details.
<BR><BR><B>12.</B> A computer-readable medium according to claim 11, wherein the method
     further comprises in the event of a removal of an edge, updating a
     transitive closure table.
<BR><BR><B>13.</B> A computer-readable medium according to claim 11, wherein the method
     further comprises:identifying, in the event of an addition an edge, every
     path whose end point is the added edge and every path whose start point
     is the added edge;determining all the combinations of said identified
     paths whose end point is the added edge and said identified paths whose
     start point is the added edge;storing each of said determined
     combinations as a path; andstoring the details of said determined
     combination paths.
<BR><BR><B>14.</B> A computer-readable medium according to claim 13, wherein the method
     further comprises in the event of an addition of an edge, updating a
     transitive closure table.
<BR><BR><B>15.</B> A computer-readable medium according to claim 10, wherein the method
     further comprises:identifying, in the event of an addition an edge, every
     path whose end point is the added edge and every path whose start point
     is the added edge;determining all the combinations of said identified
     paths whose end point is the added edge and said identified paths whose
     start point is the added edge;storing each of said determined
     combinations as a path; andstoring the details of said determined
     combination paths.
<BR><BR><B>16.</B> A computer-readable medium according to claim 15, wherein the method
     further comprises in the event of an addition of an edge, updating a
     transitive closure table.
<BR><BR><B>17.</B> A computer-readable medium according to claim 10, wherein at least
     some nodes of the directed acyclic graph nodes are folders in a file
     system.
<BR><BR><B>18.</B> A computer-readable medium according to claim 10, wherein at least
     some nodes in the DAG are classes in an object oriented class inheritance
     heirarchy.
<BR><BR><B>19.</B> A computing platform operative to persist directed acylic graphs, the
     computing platform comprising a computer, a memory and a query
     functionality, the computer being operative to:store all paths of the
     directed acylic graph in a path table in the memory; andstore all details
     of the stored paths in a path detail table in the memory.
<BR><BR><B>20.</B> A computing platform according to claim 19, wherein the computer is
     further operative to;query, in the event of a removal of an edge, and via
     the query functionality, said stored paths in said path table to identify
     paths including said removed edge;remove, responsive to said query of
     said stored paths, said identified paths including said removed edge from
     said stored paths of said path table;query, in the event of a removal of
     an edge, and via the query functionality, said stored path details of
     said path detail table to identify paths including said removed edge;
     andremove, responsive to said query of said stored path details, said
     identified paths including said removed edge, from said stored details of
     said path detail table.
<BR><BR><B>21.</B> A computing platform according to claim 20, wherein the computer is
     further operative in the event of a removal of an edge to update a
     transitive closure table in the memory.
<BR><BR><B>22.</B> A computing platform according to claim 20, wherein the computer is
     further operative to:identify, in the event of an addition an edge, every
     path whose end point is the added edge and every path whose start point
     is the added edge;determine all the combinations of said identified paths
     whose end point is the added edge and said identified paths whose start
     point is the added edge;store each of said determined combinations as a
     path; andstore the details of said determined combination paths.
<BR><BR><B>23.</B> A computing platform according to claim 22, wherein the computer is
     further operative in the event of an addition of an edge to updating a
     transitive closure table in the memory.
<BR><BR><B>24.</B> A computing platform according to claim 19, wherein the computer is
     further operative to:identify, in the event of an addition an edge, every
     path whose end point is the added edge and every path whose start point
     is the added edge;determine all the combinations of said identified paths
     whose end point is the added edge and said identified paths whose start
     point is the added edge;store each of said determined combinations as a
     path; andstore the details of said determined combination paths.
<BR><BR><B>25.</B> A computing platform according to claim 23, wherein the computer is
     further operative in the event of an addition of an edge to updating a
     transitive closure table in the memory.
<BR><BR><B>26.</B> A computing platform according to claim 19, wherein at least some
     nodes of the directed acyclic graph nodes are folders in a file system.
<BR><BR><B>27.</B> A computer-readable medium according to claim 19, wherein at least
     some nodes in the DAG are classes in an object oriented class inheritance
     heirarchy.
<BR><BR><B>28.</B> A database for persisting a directed acylic graph comprising:a path
     table constituted of all paths of the directed acyclic graph; anda path
     detail table constituted of details of all paths in said path table.
<BR><BR><B>29.</B> A database according to claim 28, further comprising:a transitive
     closure table substantially equal to said path table with all
     duplications of paths which have the same start and finish removed.<H2>Description:<BR></H2>
<FONT size="+1"><B>CROSS</B></FONT>-REFERENCE TO RELATED APPLICATIONS
<BR><BR><B>[0001]</B>This application claims priority from U.S. Provisional Patent
     Application Ser. No. 60,893,968 filed Mar. 9, 2007, entitled "Virtual
     Hosted Operating System" the entire contents of which is incorporated
     herein by reference.
<BR><BR><FONT size="+1"><B>BACKGROUND OF THE INVENTION</B></FONT>
<BR><BR><B>[0002]</B>The invention is related to a method of computer software and
     modeling and more specifically to a computer implemented method of
     persisting directed acylic graphs.
<BR><BR><B>[0003]</B>A common construct in computer science is the directed acyclic graph
     (DAG). This construct has a set of nodes, one of which is a root, and
     directed edges between some pairs of nodes such that every node is
     reachable from the root and such that there are no cycles of edges. By
     way of a non-limiting example of where a GAD arises, the folders in a
     typical file system without shortcuts form a tree, but after adding
     shortcuts between folders it typically becomes a DAG, since there is
     often more than one path from the root to a folder.
<BR><BR><B>[0004]</B>A particularly important use of DAGs is the one created by the
     classes in an object-oriented modeling or programming language, for
     example UML static class diagrams and/or C++, once an inheritance
     relationship, including multiple-inheritance, is added between the
     classes, provided that a top level class such as `object` is provided in
     the language. An example of this type of DAG is shown in FIG. 1, which
     will be described further hereinto below.
<BR><BR><B>[0005]</B>A known challenge for most storage mechanisms, such as relational
     databases which represent data in tabular format, is that they are not
     able to directly represent DAGs. It is possible to represent DAGs using
     one table to list all the nodes and another table to list all the edges,
     where each edge is represented as a pair of nodes. In a non-limiting
     example, a DAG is represented using two columns in an edge table, with
     one column representing a direction from the node and another column
     representing to the node. However this representation is very inefficient
     for answering certain standard queries such as: "find all the descendants
     of a node n". Such a query cannot be expresses as a single database query
     using this representation and cannot be achieved in reasonable time.
<BR><BR><B>[0006]</B>Most prior art algorithms focus on finding, or at least
     approximating, a transitive closure of the DAG, i.e. a list of all pairs
     of nodes which are connected through one or more edges. In particular,
     many algorithms focus on finding the entire transitive closure, as
     required. However, if a DAG is changing reasonably often, then computing
     a transitive closure each time the DAG changes is extremely inefficient.
<BR><BR><B>[0007]</B>One particular prior art reference, "Maintaining Transitive Closure
     of Graphs in SQL", by Ghozhu Dong et al., published 1999 in the
     International Journal of Information Technology, the entire contents of
     which is incorporated herein by reference, and in particular section 2 of
     the reference, Transitive Closure of Acyclic Graphs, of the reference,
     goes further and presents a way of persisting in memory a representation
     of the transitive closure. Whenever the DAG is updated, the transitive
     closure is also updated, thereby saving the need to compute it from
     scratch after every change. The transitive closure maybe used to rapidly
     answer queries like "is node F descendent from node A" or "find all
     descendents of node X". However, there is no efficient algorithm for
     updating the transitive closure when an edge is removed from the DAG,
     thus making this solution inappropriate for very large DAGs, or for use
     with DAGs exhibiting edges which are deleted frequently.
<BR><BR><FONT size="+1"><B>SUMMARY OF THE INVENTION</B></FONT>
<BR><BR><B>[0008]</B>Accordingly, it is a principal object of the present invention to
     provide a computer implemented method of representing DAGs in memory.
     Instead of persisting just the nodes and edges of the DAG's, or just the
     nodes, edges and transitive closure of the DAG's, the present invention
     persists a full enumeration of all paths in the DAG and updates it
     whenever the DAG updates. Storing a representation of all paths requires
     more memory than storing a representation of the transitive closure and
     significantly more memory than just storing the nodes and edges, however
     advantageously storing the representation of all paths makes certain
     important queries significantly faster. Additionally, the algorithms for
     updating the path table when an edge is deleted are more efficient than
     the algorithms for updating a transitive closure table of the prior art.
<BR><BR><B>[0009]</B>Additional features and advantages of the invention will become
     apparent from the following drawings and description.
<BR><BR><FONT size="+1"><B>BRIEF DESCRIPTION OF THE DRAWINGS</B></FONT>
<BR><BR><B>[0010]</B>For a better understanding of the invention and to show how the same
     may be carried into effect, reference will now be made, purely by way of
     example, to the accompanying drawings in which like numerals designate
     corresponding elements or sections throughout.
<BR><BR><B>[0011]</B>With specific reference now to the drawings in detail, it is
     stressed that the particulars shown are by way of example and for
     purposes of illustrative discussion of the preferred embodiments of the
     present invention only, and are presented in the cause of providing what
     is believed to be the most useful and readily understood description of
     the principles and conceptual aspects of the invention. In this regard,
     no attempt is made to show structural details of the invention in more
     detail than is necessary for a fundamental understanding of the
     invention, the description taken with the drawings making apparent to
     those skilled in the art how the several forms of the invention may be
     embodied in practice. In the accompanying drawings:
<BR><BR><B>[0012]</B>FIG. 1 illustrates a sample DAG comprising classes in an object
     oriented programming language, with multiple inheritance relationships
     between them, in accordance with the prior art;
<BR><BR><B>[0013]</B>FIG. 2 illustrates a high level block diagram of a computing
     platform in accordance with a principle of the current invention
<BR><BR><B>[0014]</B>FIG. 3 illustrates a UML static class diagram Metamodel for
     representing a DAG, including nodes and edges, together with paths,
     according to a principle of the invention;
<BR><BR><B>[0015]</B>FIG. 4 illustrates an example of a DAG and paths, according to a
     principle of the invention, as stored in the memory of the computing
     platform of FIG. 2;
<BR><BR><B>[0016]</B>FIGS. 5A-5E illustrates examples of the DAG of FIG. 4 and the paths
     thereof represented in a relational database according to a principle of
     the invention;
<BR><BR><B>[0017]</B>FIG. 6A illustrates a high level flow chart of a computer
     implemented method, according to a principle of the invention, operable
     in association with the computing platform of FIG. 2, to efficiently
     update the data structures when an edge is removed from a DAG; and
<BR><BR><B>[0018]</B>FIG. 6B illustrates a high level flow chart of a computer
     implemented method, according to a principle of the invention, operable
     in association with the computing platform of FIG. 2, to efficiently
     update the data structures when an edge is added to a DAG.
<BR><BR><FONT size="+1"><B>DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS</B></FONT>
<BR><BR><B>[0019]</B>The present embodiments enable a computer implemented method of
     representing DAGs in memory, comprising persisting a full path table in
     memory, and updating the path table whenever the DAG updates.
<BR><BR><B>[0020]</B>Before explaining at least one embodiment of the invention in
     detail, it is to be understood that the invention is not limited in its
     application to the details of construction and the arrangement of the
     components set forth in the following description or illustrated in the
     drawings. The invention is applicable to other embodiments or of being
     practiced or carried out in various ways. Also, it is to be understood
     that the phraseology and terminology employed herein is for the purpose
     of description and should not be regarded as limiting.
<BR><BR><B>[0021]</B>FIG. 2 illustrates a high level block diagram of a computing
     platform 10 in accordance with a principle of the current invention
     comprising: a computing device 20 comprising a processor 40 and a memory
     70; a user input device 50; a monitor 60; and an output device 80, such
     as a printer. Memory 70 comprises a relational database representation of
     a DAG 71, including a nodes table 72; an edges table 73; a path table 74;
     a path detail table 75; an optional transitive closure table 76; and path
     updating functionality 77. Path updating functionality 77 represents
     computer readable instructions, enabling processor 40 to update nodes
     table 72, edges table 73, path table 74, path detail table 75 and
     optional transitive closure table 76 whenever DAG 71 changes. Monitor 60
     is coupled to an output of processor 40 and computing device 20 is
     connected to user input device 50. Processor 40 is further in
     communication with memory 70, user input 50 and output device 80.
<BR><BR><B>[0022]</B>User input device 50 is illustrated as a keyboard, however this is
     not meant to be limiting in any way. The use of any or all of a pointing
     device, a voice input, or a touch screen is equally applicable and is
     specifically included. Memory 70 is illustrated as being internal to
     computing device 20, however this is not meant to be limiting in any way.
     All or parts of memory 70 may be provided external to computing device
     20, such as a network server, the Internet, or a removable computer
     readable media, without exceeding the scope of the invention.
<BR><BR><B>[0023]</B>Computing platform 10 has been described as having a monitor and a
     user input device 50 associated therewith, however this is not meant to
     be limiting in any way. In one embodiment computing platform 10 is
     constituted of a server, comprising a web server or other application
     programming interface for processing requests received from a connected
     network.
<BR><BR><B>[0024]</B>Memory 70 of computing device 20 is further operative to store the
     computer implemented method according to the principle of the invention
     in computer readable format for execution by computing device 20.
<BR><BR><B>[0025]</B>The invention addresses a situation where DAG 71 is represented in
     memory 70 as a list of nodes and list of edges, each edge being an
     ordered pair of nodes, which changes from time to time. In one
     non-limiting embodiment DAG 71 represents folders in a file system and in
     another non-limiting embodiment DAG 71 represents classes in a
     dynamically changing object-oriented data model.
<BR><BR><B>[0026]</B>According to an embodiment of the invention, there is additionally
     stored in memory 70 a data representation of all paths in the DAG, which
     is stored within nodes table 72; edges table 73; path table 74; path
     detail table 75; and optional transitive closure table 76.
<BR><BR><B>[0027]</B>FIG. 3 illustrates a UML static class diagram Metamodel for
     representing a DAG, including nodes and edges, together with paths,
     according to a principle of the invention. The object-oriented Metamodel
     of FIG. 3 may also be converted into a persistence scheme using Object
     Relational Mapping. One embodiment of a resultant relational database
     schema, including sample data, is shown in FIGS. 5A-5E.
<BR><BR><B>[0028]</B>In particular, referring to FIG. 4, which illustrates an example of
     a DAG and paths, according to a principle of the invention, as stored in
     the memory of computing platform 10 of FIG. 2, the diagram shows nodes A,
     B, C, D, and E and edges AB, AC, BA, CD and AE. Nodes A, B, C, D and E in
     one embodiment represent classes; and edges AB, AC, BA, CD and AE in one
     embodiment represent superclass--subclass relationships. The transitive
     closure is the edges plus the dashed line AD. The paths are the edges
     plus the two paths, each of which is a sequence of edges, AC BD; AC CD
     shown with a broader dash.
<BR><BR><B>[0029]</B>In particular, FIG. 5A illustrates an embodiment of node table 72;
     FIG. 5B illustrates an embodiment of Edges table 73; FIG. 5C illustrates
     an embodiment of path table 74; FIG. 5D illustrates an embodiment of path
     detail table 75; and FIG. 5E illustrates an embodiment of optional
     transitive closure table 76.
<BR><BR><B>[0030]</B>In one embodiment, the method according to a principle of the
     invention captures every single path from any node to any node in DAG 71.
     Every path is an ordered list of edges. For efficiency, the method
     according to the principle of the invention also directly points at both
     the starting point and the end point of the path even those may be
     calculated from the first and last edges in the path. In one embodiment,
     (not shown), the "empty path" from each edge to itself is also stored in
     path table 74, without any corresponding path details in path detail
     table 75.
<BR><BR><FONT size="+1"><B>Queries</B></FONT>
<BR><BR><B>[0031]</B>With the existence of path table 74 certain important queries can be
     performed much more directly and efficiently than would otherwise be
     possible, even using a single query of a database query language SQL.
<BR><BR>1. Is B descendant from A?
<BR><BR><B>[0032]</B>A is tested to check if it is an ancestor of B directly by simply
     querying to see if there is one or more paths found in Path Table 74
     whose start is A and end is B.
<BR><BR><B>[0033]</B>In another embodiment, transitive closure table 76 which is always
     precisely equal to path table 74 with the exception that all duplications
     of paths which have the same start and finish have been removed, is also
     implemented. Each pair in transitive closure table 76 preferably includes
     a count of how many paths correspond to each transitive closure, so that
     it the path is preferably removed when the count reaches 0. Thus, when a
     path is deleted the corresponding transitive closure is deleted by using
     the count, without the need to query to see if there are other paths with
     the same start and finish.
<BR><BR><B>[0034]</B>It will be appreciated that a query "find all descendants of A" or
     "find all ancestors of A" can also be achieved with a direct query of the
     path table, although duplicate results should then be removed, or by
     querying the transitive closure table.
<BR><BR><FONT size="+1"><B>Update Algorithms</B></FONT>
<BR><BR>2. Removing an Edge
<BR><BR><B>[0035]</B>FIG. 6A illustrates a high level flow chart of a computer
     implemented method, according to a principle of the invention, operable
     in association with computing platform 10 of FIG. 2, to remove an edge
     from a DAG. In stage 1000, path detail table 75 is queried for every path
     that includes the edge to be removed. In stage 1010, the paths identified
     in the query of stage 1000 are removed from path table 74. In stage 1020,
     path detail table 75 is queried to find all the details of every path
     that includes the edge to be removed, as described above in relation to
     stage 1000, from the DAG. In stage 1030, the details identified in stage
     1020 are removed from path detail table 75. In this way removing an edge
     requires three simple database queries: a) finding the paths of stage
     1000; b) removing the path from the path table of stage 1010; c) finding
     and removing the details of the paths of stages 1020, 1030. Optionally,
     in stage 1040, transitive closure table 76 is updated. The below pseudo
     code implements removing an edge from a DAG, the corresponding path table
     74 and corresponding path detail table 75 as described in FIG. 6A.
<BR><BR><FONT size="+1"><B>    TABLE</B></FONT>-US-00001
    //1.Initiate a transaction
      Transaction.beginTransaction( );
      //Obtain a global write lock on TC, InheritancePath, PathEdges
     tables.
      PathTables.obtainLock( )
      //define the class-superclass edge
      currentEdge = new Edge(sourceGhClass, targetGhClass);
      //retreave P1: paths containing the currentEdge from the PathEdges
     Table
      paths = ''SELECT PATHS FROM INHERITANCE_PATHS IH,
     PATH_EDGES PE WHERE HI.ID IN (SELECT
      PE.INHERITANCE_PATH_ID FROM PATH_EDGES WHERE
     PE.START =" + currentEdge.getId( ) + " &amp; PE.END
      =" currentEdge.getId( ))";
      //delete all paths, and using cascade, delete all related edges in
     the EDGES_TABLE .
      dbTables.remove(paths);
      //search the TC table, if records with count &gt; 1, then decrement the
     count by 1,
      //else, if the count ==1, then delete the raw.newPath = new
     Path( );
      for i=0; i&lt;paths.length {
       tcRecord = "SELECT * FROM TC WHERE
       TC.ID = " + paths[i].getId( );
       if tcRecord.getCount( ) &gt; 1 {
        tcRecord.incrementCount( );
      }else {
       db.deleteTCRecord(tcRecord);
      }
     }
     //commit will release the write lock.
     Transaction.commit( );
     //free resources.
     Transaction.close( );
     }
<BR><BR>3. Adding an Edge
<BR><BR><B>[0036]</B>FIG. 6B illustrates a high level flow chart of a computer
     implemented method, according to a principle of the invention, operable
     in association with computing platform 10 of FIG. 2, to add an edge to a
     DAG. In stage 1100, identify (A) every path C1 . . . Cn whose end point
     Cn equals A, plus the empty path with no edges, and (B) every path D1 . .
     . Dn whose start D1=A plus the empty path with no edges.
<BR><BR><B>[0037]</B>In stage 1110, add a new path with nodes C1 . . . Cn D1 . . . Dn for
     each combination of a path from set (A) followed by a path of set (B) of
     the path sets A and B identified in stage 1110 to path table 74 and add
     the details to path detail table 75 (i.e. the edges C1-C2, C2-C3, . . .
     Cn-D1, D1-D2 . . . ). The set of combinations of paths from A and paths
     from B is sometimes known in mathematics as the cross product.
     Optionally, in stage 1120, transitive closure table 76 is updated by
     adding for each new path C1 . . . Cn D1 . . . Dn, a transitive closure
     C1-Dn if it doesn't exist, or optionally incrementing its count if it
     already exists. The below pseudo code implements adding an edge to a DAG
     and the corresponding path table 74 and path detail table 75.
<BR><BR><FONT size="+1"><B>    TABLE</B></FONT>-US-00002
    //1.Initiate a transaction
     Transaction.beginTransaction( );
     //Obtain a global write lock on TC, InheritancePath, PathEdges
    tables.
     PathTables.obtainLock( )
     //define the class-superclass edge
     currentEdge = new Edge(sourceGhClass, targetGhClass);
     //retreave P1: paths ending with SourceGhClass
     p1 = ''SELECT * FROM INHERITANCE_PATHS IH
    WHERE IH.START ='' + sourceGhClass.getId( );
     p2 = ''SELECT * FROM INHERITANCE_PATHS IH WHERE
    IH.END ='' + target.getId( );
     //construct the new paths
     newPath = new Path( );
     newPaths = new Path[];
     for i=0; i&lt;p1.length {
      for j=0; j&lt;p2.length {
       newPaths.add(newPath(p1[i] + currentEdge + p2[j]));
      }
     }
     //save the new paths to the DB, which include.
     //insert the new paths to the InheritancePath table and the
    PathEdges table.
     //Constructing the SQL insert statement
     inheritancePathInsertSQl = ''INSERT INTO INHERITANCE_PATH,
     VALUES ('';
     pathEdgesInsertSQL = ''INSERT INTO PATH_EDGES VALUES ('';
     //loop thought the newPaths, and construct the sql insert statement
     for i=0; i&lt;newPaths.length {
       //insert the newPath paths records in the inheritance_path table.
       inheritancePathInsertSQl += newPaths[i].getStart( ) + '','' +
     newPath[i].getEnd + ''), ('';
       for j=0; j&lt;newPaths[i].getEdgesSize( )
       pathEdgesInsertSQL += newPaths[i].getid( ) + '', '' +
     newPaths[j].getEdge(j).getStart( ) + '', ''
       newPaths[j].getEdge(j).getEnd + '), ('';
     }
     inheritancePathInsertSQL += ")"
     pathEdgesInsertSQL += ")";
     execute(inheritancePathInsertSQL);
     execute(pathEdgesInsertSQl);
     //update the TC table
     //Look on the TC table, if the raw is available, then increment the
    TC.count by one, //else,
     add new raw, setting the Tc.count to 1.
     for i=0; i&lt;newPaths.length {
       tcRecord = findTCRecord(newPaths[i]);
       if (tcRecord != null) {
        tcRecord.incrementCounter( );
        tcRecord.save( );
       }
       Else {
        tcRecord = new TCRecord(newPath[i]);
        tcRecord.save( );
      }
     }
     //commit will release the write lock.
     Transaction.commit( );
     //free resources.
     Transaction.close( );
     }
<BR><BR><B>[0038]</B>Those skilled in the art of relational database and/or programming
     will be able to code the data structures, database schemas and specific
     transactions and queries reasonably easily using the above guidelines.
<BR><BR><FONT size="+1"><B>SUMMARY</B></FONT>
<BR><BR><B>[0039]</B>By storing both DAG 71 as well as the path table 74, and path detail
     table 75, a simple and relatively quick computer implemented algorithm
     for checking ancestors and descendants using the path table, and/or using
     a transitive closure table derived from it by eliminating duplicates, is
     provided. Additionally, FIG. 6A and FIG. 6B describe algorithms for
     updating the path table when edges are added or removed which are more
     efficient than prior art algorithms for updating transitive closure
     tables when a path table is not present.
<BR><BR><B>[0040]</B>The price for this efficiency is the extra storage required for the
     path table and also the time taken by transactions for adding and
     removing edges.
<BR><BR><FONT size="+1"><B>EXAMPLE</B></FONT>
<BR><BR><B>[0041]</B>By way of an example, which corresponds to the diagrams of FIGS.
     3-5, consider a DAG with nodes comprising of Classes A, B, C, D, E with
     superclass-subclass edges AB, AC, BD, CD, AE.
<BR><BR><B>[0042]</B>The paths are the following seven sequences of edges: AB; AC; BD;
     CD; AE; AB BD; AC CD
<BR><BR><B>[0043]</B>The transitive closure is the start and finish nodes of the path
     table with duplications removed in this case:
<BR><BR><FONT size="+1"><B>AB </B></FONT>(count 1); AC (count 1); BD (count 1); CD (count 1); AE (count 1); AD
     (count 2).
<BR><BR><B>[0044]</B>To remove the edge BD, as described in relation to FIG. 6A, remove
     every path containing BD from path table 74 which are the paths BD and AB
     BD. Further remove the details of these paths from path detail table 75,
     i.e. every path detail which points at that path using that Path ID
     foreign key. For path BD, the Path ID is the detail containing the edge
     BD and for AB BD is the two details AB and BD. In transitive closure
     table 76 we decrement the count of AD by one since there is now one less
     path from A to D, and we remove BD which now has a count of zero.
<BR><BR><B>[0045]</B>To add edge EC, as described in relation to FIG. 6B, i.e. a user
     tells us that C is a subclass of E, take all the paths ending at E
     including empty path (AE, empty path) and all those starting at C (CD,
     empty path) and "cross product" them so that the set of paths to add to
     path table 74 with corresponding details are the 2×2=4 new paths:
<BR><BR><FONT size="+1"><B>Empty path</B></FONT>-EC-Empty path=EC
<BR><BR><FONT size="+1"><B>AE EC</B></FONT>-Empty path=AE EC;
<BR><BR><FONT size="+1"><B>Empty path</B></FONT>-EC CD=EC CD;
<BR><BR><FONT size="+1"><B>AE EC CD</B></FONT>
<BR><BR><B>[0046]</B>It will be appreciated that adding or removing a node does not
     require any updates to the edge table 73, path table 74, path detail
     table 75 or optional transitive closure table 76.
<BR><BR><B>[0047]</B>The corresponding counts must be updated in transitive closure table
     76 for every start and finish of a path, e.g. increment the relationships
     EC, AC, ED and AC in the transitive closure or create if non-existent.
<BR><BR><B>[0048]</B>Thus, the present embodiments enable a computer implemented method
     of representing DAGs in memory, comprising persisting a full path table
     in memory, and updating the path table whenever the DAG updates.
<BR><BR><B>[0049]</B>It is appreciated that certain features of the invention, which are,
     for clarity, described in the context of separate embodiments, may also
     be provided in combination in a single embodiment. Conversely, various
     features of the invention which are, for brevity, described in the
     context of a single embodiment, may also be provided separately or in any
     suitable sub-combination.
<BR><BR><B>[0050]</B>Unless otherwise defined, all technical and scientific terms used
     herein have the same meanings as are commonly understood by one of
     ordinary skill in the art to which this invention belongs. Although
     methods similar or equivalent to those described herein can be used in
     the practice or testing of the present invention, suitable methods are
     described herein.
<BR><BR><B>[0051]</B>All publications, patent applications, patents, and other references
     mentioned herein are incorporated by reference in their entirety. In case
     of conflict, the patent specification, including definitions, will
     prevail. In addition, the materials, methods, and examples are
     illustrative only and not intended to be limiting.
<BR><BR><B>[0052]</B>The terms "include", "comprise" and "have" and their conjugates as
     used herein mean "including but not necessarily limited to".
<BR><BR><B>[0053]</B>It will be appreciated by persons skilled in the art that the
     present invention is not limited to what has been particularly shown and
     described hereinabove. Rather the scope of the present invention is
     defined by the appended claims and includes both combinations and
     sub-combinations of the various features described hereinabove as well as
     variations and modifications thereof, which would occur to persons
     skilled in the art upon reading the foregoing description.

<BR>
<BR>

<SCRIPT type="text/javascript" src="./0287 EFFICIENT DIRECTED ACYCLIC GRAPH REPRESENTATION - Patents_files/MochiKit.js"></SCRIPT>
<SCRIPT type="text/javascript" src="./0287 EFFICIENT DIRECTED ACYCLIC GRAPH REPRESENTATION - Patents_files/PlotKit_Packed.js"></SCRIPT>
<SCRIPT type="text/javascript" src="./0287 EFFICIENT DIRECTED ACYCLIC GRAPH REPRESENTATION - Patents_files/legend.js"></SCRIPT>
<SCRIPT type="text/javascript" src="./0287 EFFICIENT DIRECTED ACYCLIC GRAPH REPRESENTATION - Patents_files/excanvas2.js"></SCRIPT>


							<DIV align="left">
							<TABLE style="table-layout:fixed" border="0" cellpadding="0" cellspacing="0" width="600">
							<TBODY><TR>
							<TD width="800" height="300">
							<BR> <CENTER>Patents by SIMON KAHN - PYI Tech, Ltd.;c/o LANDONIP, INC</CENTER>
							<DIV style="position: relative; width: 800px; "><CANVAS id="bg_agn4192" width="800" height="300"></CANVAS><DIV style="position: absolute; font-size: 9px; z-index: 10; color: rgb(128, 128, 128); overflow-x: hidden; overflow-y: hidden; top: 271px; left: -3px; text-align: right; width: 24px; ">0.0</DIV><DIV style="position: absolute; font-size: 9px; z-index: 10; color: rgb(128, 128, 128); overflow-x: hidden; overflow-y: hidden; top: 217px; left: -3px; text-align: right; width: 24px; ">0.8</DIV><DIV style="position: absolute; font-size: 9px; z-index: 10; color: rgb(128, 128, 128); overflow-x: hidden; overflow-y: hidden; top: 163px; left: -3px; text-align: right; width: 24px; ">1.6</DIV><DIV style="position: absolute; font-size: 9px; z-index: 10; color: rgb(128, 128, 128); overflow-x: hidden; overflow-y: hidden; top: 109px; left: -3px; text-align: right; width: 24px; ">2.4</DIV><DIV style="position: absolute; font-size: 9px; z-index: 10; color: rgb(128, 128, 128); overflow-x: hidden; overflow-y: hidden; top: 55px; left: -3px; text-align: right; width: 24px; ">3.2</DIV><DIV style="position: absolute; font-size: 9px; z-index: 10; color: rgb(128, 128, 128); overflow-x: hidden; overflow-y: hidden; top: 1px; left: -3px; text-align: right; width: 24px; ">4.0</DIV><DIV style="position: absolute; font-size: 9px; z-index: 10; color: rgb(128, 128, 128); overflow-x: hidden; overflow-y: hidden; top: 283px; left: 51.5306px; text-align: center; width: 50px; ">2008-01</DIV><DIV style="position: absolute; font-size: 9px; z-index: 10; color: rgb(128, 128, 128); overflow-x: hidden; overflow-y: hidden; top: 283px; left: 144.592px; text-align: center; width: 50px; ">2008-05</DIV><DIV style="position: absolute; font-size: 9px; z-index: 10; color: rgb(128, 128, 128); overflow-x: hidden; overflow-y: hidden; top: 283px; left: 237.653px; text-align: center; width: 50px; ">2008-06</DIV><DIV style="position: absolute; font-size: 9px; z-index: 10; color: rgb(128, 128, 128); overflow-x: hidden; overflow-y: hidden; top: 283px; left: 330.714px; text-align: center; width: 50px; ">2008-08</DIV><DIV style="position: absolute; font-size: 9px; z-index: 10; color: rgb(128, 128, 128); overflow-x: hidden; overflow-y: hidden; top: 283px; left: 423.776px; text-align: center; width: 50px; ">2008-09</DIV><DIV style="position: absolute; font-size: 9px; z-index: 10; color: rgb(128, 128, 128); overflow-x: hidden; overflow-y: hidden; top: 283px; left: 516.837px; text-align: center; width: 50px; ">2008-11</DIV><DIV style="position: absolute; font-size: 9px; z-index: 10; color: rgb(128, 128, 128); overflow-x: hidden; overflow-y: hidden; top: 283px; left: 609.898px; text-align: center; width: 50px; ">2008-12</DIV><DIV style="position: absolute; font-size: 9px; z-index: 10; color: rgb(128, 128, 128); overflow-x: hidden; overflow-y: hidden; top: 283px; left: 702.959px; text-align: center; width: 50px; ">2009-01</DIV></DIV>
							<BR>
							<CENTER><DIV id="legend_agn4192"><TABLE class="legendcontainer" classname="legendcontainer"><THEAD><TFOOT><TBODY><TR><TD><DIV class="legendbox" classname="legendbox" style="background-color: rgb(42, 66, 105); "></DIV></TD><TD class="legendlabel" classname="legendlabel"></TD><TD><TD></TR></TBODY></TABLE></DIV></CENTER></TD>
							</TR></TBODY></TABLE></DIV>
							<SCRIPT type="text/javascript">
							<!--
							if (navigator.userAgent.indexOf('NT 5.0') == -1 || (navigator.userAgent.indexOf('MSIE 6') == -1 && navigator.userAgent.indexOf('MSIE 5') == -1)){
							var options_agn4192 = {
							"IECanvasHTC": "/js/iecanvas.htc",
							"colorScheme": PlotKit.Base.palette(PlotKit.Base.baseColors()[0]),
							"padding": {left: 30, right: 10, top: 10, bottom: 20},
							"xTicks": [{v:0, label:"2008-01"},{v:1, label:"2008-05"},{v:2, label:"2008-06"},{v:3, label:"2008-08"},{v:4, label:"2008-09"},{v:5, label:"2008-11"},{v:6, label:"2008-12"},{v:7, label:"2009-01"}],
							"drawYAxis": true
							};
							function drawBarGraph() {
							var layout = new PlotKit.Layout("bar", options_agn4192);
							layout.addDataset("", [[0,1],[1,1],[2,2],[3,1],[4,4],[5,1],[6,1],[7,1]]);
							layout.evaluate();
							var canvas = MochiKit.DOM.getElement("bg_agn4192");
							var plotter = new PlotKit.SweetCanvasRenderer(canvas, layout, options_agn4192);
							plotter.render();
							legend = new PTPlotLegend('legend_agn4192', layout, plotter);
							legend.showLegend();
							}
							MochiKit.DOM.addLoadEvent(drawBarGraph);}
							//-->
							</SCRIPT>
							<BR>
							

							<DIV align="left">
							<TABLE style="table-layout:fixed" border="0" cellpadding="0" cellspacing="0" width="600">
							<TBODY><TR>
							<TD width="800" height="300">
							<BR> <CENTER>Patents by Zvi Schreiber</CENTER>
							<DIV style="position: relative; width: 800px; "><CANVAS id="bg_inv58530" width="800" height="300"></CANVAS><DIV style="position: absolute; font-size: 9px; z-index: 10; color: rgb(128, 128, 128); overflow-x: hidden; overflow-y: hidden; top: 271px; left: -3px; text-align: right; width: 24px; ">0.0</DIV><DIV style="position: absolute; font-size: 9px; z-index: 10; color: rgb(128, 128, 128); overflow-x: hidden; overflow-y: hidden; top: 217px; left: -3px; text-align: right; width: 24px; ">0.4</DIV><DIV style="position: absolute; font-size: 9px; z-index: 10; color: rgb(128, 128, 128); overflow-x: hidden; overflow-y: hidden; top: 163px; left: -3px; text-align: right; width: 24px; ">0.8</DIV><DIV style="position: absolute; font-size: 9px; z-index: 10; color: rgb(128, 128, 128); overflow-x: hidden; overflow-y: hidden; top: 109px; left: -3px; text-align: right; width: 24px; ">1.2</DIV><DIV style="position: absolute; font-size: 9px; z-index: 10; color: rgb(128, 128, 128); overflow-x: hidden; overflow-y: hidden; top: 55px; left: -3px; text-align: right; width: 24px; ">1.6</DIV><DIV style="position: absolute; font-size: 9px; z-index: 10; color: rgb(128, 128, 128); overflow-x: hidden; overflow-y: hidden; top: 1px; left: -3px; text-align: right; width: 24px; ">2.0</DIV><DIV style="position: absolute; font-size: 9px; z-index: 10; color: rgb(128, 128, 128); overflow-x: hidden; overflow-y: hidden; top: 283px; left: 89.4444px; text-align: center; width: 50px; ">2005-02</DIV><DIV style="position: absolute; font-size: 9px; z-index: 10; color: rgb(128, 128, 128); overflow-x: hidden; overflow-y: hidden; top: 283px; left: 258.333px; text-align: center; width: 50px; ">2005-10</DIV><DIV style="position: absolute; font-size: 9px; z-index: 10; color: rgb(128, 128, 128); overflow-x: hidden; overflow-y: hidden; top: 283px; left: 427.222px; text-align: center; width: 50px; ">2006-03</DIV><DIV style="position: absolute; font-size: 9px; z-index: 10; color: rgb(128, 128, 128); overflow-x: hidden; overflow-y: hidden; top: 283px; left: 596.111px; text-align: center; width: 50px; ">2008-09</DIV></DIV>
							<BR>
							<CENTER><DIV id="legend_inv58530"><TABLE class="legendcontainer" classname="legendcontainer"><THEAD><TFOOT><TBODY><TR><TD><DIV class="legendbox" classname="legendbox" style="background-color: rgb(42, 66, 105); "></DIV></TD><TD class="legendlabel" classname="legendlabel"></TD><TD><TD></TR></TBODY></TABLE></DIV></CENTER></TD>
							</TR></TBODY></TABLE></DIV>
							<SCRIPT type="text/javascript">
							<!--
							if (navigator.userAgent.indexOf('NT 5.0') == -1 || (navigator.userAgent.indexOf('MSIE 6') == -1 && navigator.userAgent.indexOf('MSIE 5') == -1)){
							var options_inv58530 = {
							"IECanvasHTC": "/js/iecanvas.htc",
							"colorScheme": PlotKit.Base.palette(PlotKit.Base.baseColors()[0]),
							"padding": {left: 30, right: 10, top: 10, bottom: 20},
							"xTicks": [{v:0, label:"2005-02"},{v:1, label:"2005-10"},{v:2, label:"2006-03"},{v:3, label:"2008-09"}],
							"drawYAxis": true
							};
							function drawBarGraph() {
							var layout = new PlotKit.Layout("bar", options_inv58530);
							layout.addDataset("", [[0,1],[1,1],[2,1],[3,2]]);
							layout.evaluate();
							var canvas = MochiKit.DOM.getElement("bg_inv58530");
							var plotter = new PlotKit.SweetCanvasRenderer(canvas, layout, options_inv58530);
							plotter.render();
							legend = new PTPlotLegend('legend_inv58530', layout, plotter);
							legend.showLegend();
							}
							MochiKit.DOM.addLoadEvent(drawBarGraph);}
							//-->
							</SCRIPT>
							<BR>
							

									<DIV align="left">
									<TABLE style="table-layout:fixed" border="0" cellpadding="0" cellspacing="0" width="600">
									<TBODY><TR>
									<TD width="800" height="300">
									<BR> <CENTER>Patents in class  Query processing (i.e., searching) </CENTER>
									<DIV style="position: relative; width: 800px; "><CANVAS id="bg_class" width="800" height="300"></CANVAS><DIV style="position: absolute; font-size: 9px; z-index: 10; color: rgb(128, 128, 128); overflow-x: hidden; overflow-y: hidden; top: 271px; left: -3px; text-align: right; width: 24px; ">0.0</DIV><DIV style="position: absolute; font-size: 9px; z-index: 10; color: rgb(128, 128, 128); overflow-x: hidden; overflow-y: hidden; top: 217px; left: -3px; text-align: right; width: 24px; ">19.4</DIV><DIV style="position: absolute; font-size: 9px; z-index: 10; color: rgb(128, 128, 128); overflow-x: hidden; overflow-y: hidden; top: 163px; left: -3px; text-align: right; width: 24px; ">38.8</DIV><DIV style="position: absolute; font-size: 9px; z-index: 10; color: rgb(128, 128, 128); overflow-x: hidden; overflow-y: hidden; top: 109px; left: -3px; text-align: right; width: 24px; ">58.2</DIV><DIV style="position: absolute; font-size: 9px; z-index: 10; color: rgb(128, 128, 128); overflow-x: hidden; overflow-y: hidden; top: 55px; left: -3px; text-align: right; width: 24px; ">77.6</DIV><DIV style="position: absolute; font-size: 9px; z-index: 10; color: rgb(128, 128, 128); overflow-x: hidden; overflow-y: hidden; top: 1px; left: -3px; text-align: right; width: 24px; ">97.0</DIV><DIV style="position: absolute; font-size: 9px; z-index: 10; color: rgb(128, 128, 128); overflow-x: hidden; overflow-y: hidden; top: 283px; left: 12.448px; text-align: center; width: 50px; ">2005-01</DIV><DIV style="position: absolute; font-size: 9px; z-index: 10; color: rgb(128, 128, 128); overflow-x: hidden; overflow-y: hidden; top: 283px; left: 116.72px; text-align: center; width: 50px; ">2005-08</DIV><DIV style="position: absolute; font-size: 9px; z-index: 10; color: rgb(128, 128, 128); overflow-x: hidden; overflow-y: hidden; top: 283px; left: 220.992px; text-align: center; width: 50px; ">2006-03</DIV><DIV style="position: absolute; font-size: 9px; z-index: 10; color: rgb(128, 128, 128); overflow-x: hidden; overflow-y: hidden; top: 283px; left: 325.264px; text-align: center; width: 50px; ">2006-10</DIV><DIV style="position: absolute; font-size: 9px; z-index: 10; color: rgb(128, 128, 128); overflow-x: hidden; overflow-y: hidden; top: 283px; left: 429.536px; text-align: center; width: 50px; ">2007-05</DIV><DIV style="position: absolute; font-size: 9px; z-index: 10; color: rgb(128, 128, 128); overflow-x: hidden; overflow-y: hidden; top: 283px; left: 533.808px; text-align: center; width: 50px; ">2007-12</DIV><DIV style="position: absolute; font-size: 9px; z-index: 10; color: rgb(128, 128, 128); overflow-x: hidden; overflow-y: hidden; top: 283px; left: 638.08px; text-align: center; width: 50px; ">2008-07</DIV><DIV style="position: absolute; font-size: 9px; z-index: 10; color: rgb(128, 128, 128); overflow-x: hidden; overflow-y: hidden; top: 283px; left: 742.352px; text-align: center; width: 50px; ">2009-02</DIV></DIV>
									<BR>
									<CENTER><DIV id="legend_class"><TABLE class="legendcontainer" classname="legendcontainer"><THEAD><TFOOT><TBODY><TR><TD><DIV class="legendbox" classname="legendbox" style="background-color: rgb(42, 66, 105); "></DIV></TD><TD class="legendlabel" classname="legendlabel"></TD><TD><TD></TR></TBODY></TABLE></DIV></CENTER></TD>
									</TR></TBODY></TABLE></DIV>
									<SCRIPT type="text/javascript">
									<!--
									if (navigator.userAgent.indexOf('NT 5.0') == -1 || (navigator.userAgent.indexOf('MSIE 6') == -1 && navigator.userAgent.indexOf('MSIE 5') == -1)){
									var options_class = {
									"IECanvasHTC": "/js/iecanvas.htc",
									"colorScheme": PlotKit.Base.palette(PlotKit.Base.baseColors()[0]),
									"padding": {left: 30, right: 10, top: 10, bottom: 20},
									"xTicks": [{v:0, label:"2005-01"},{v:7, label:"2005-08"},{v:14, label:"2006-03"},{v:21, label:"2006-10"},{v:28, label:"2007-05"},{v:35, label:"2007-12"},{v:42, label:"2008-07"},{v:49, label:"2009-02"}],
									"drawYAxis": true
									};
									function drawBarGraph() {
									var layout = new PlotKit.Layout("bar", options_class);
									layout.addDataset("", [[0,63],[1,34],[2,97],[3,66],[4,86],[5,87],[6,94],[7,46],[8,91],[9,74],[10,55],[11,52],[12,69],[13,72],[14,71],[15,87],[16,85],[17,97],[18,72],[19,76],[20,45],[21,48],[22,71],[23,61],[24,47],[25,65],[26,76],[27,42],[28,75],[29,74],[30,60],[31,83],[32,80],[33,79],[34,81],[35,79],[36,91],[37,54],[38,67],[39,71],[40,91],[41,85],[42,69],[43,62],[44,81],[45,86],[46,69],[47,71],[48,85],[49,58],[50,67]]);
									layout.evaluate();
									var canvas = MochiKit.DOM.getElement("bg_class");
									var plotter = new PlotKit.SweetCanvasRenderer(canvas, layout, options_class);
									plotter.render();
									legend = new PTPlotLegend('legend_class', layout, plotter);
									legend.showLegend();
									}
									MochiKit.DOM.addLoadEvent(drawBarGraph);}
									//-->
									</SCRIPT>
									<BR>
									

									<DIV align="left">
									<TABLE style="table-layout:fixed" border="0" cellpadding="0" cellspacing="0" width="600">
									<TBODY><TR>
									<TD width="800" height="300">
									<BR> <CENTER>Patents in all subclasses  Query processing (i.e., searching) </CENTER>
									<DIV style="position: relative; width: 800px; "><CANVAS id="bg_subclass" width="800" height="300"></CANVAS><DIV style="position: absolute; font-size: 9px; z-index: 10; color: rgb(128, 128, 128); overflow-x: hidden; overflow-y: hidden; top: 271px; left: -3px; text-align: right; width: 24px; ">0.0</DIV><DIV style="position: absolute; font-size: 9px; z-index: 10; color: rgb(128, 128, 128); overflow-x: hidden; overflow-y: hidden; top: 217px; left: -3px; text-align: right; width: 24px; ">42.0</DIV><DIV style="position: absolute; font-size: 9px; z-index: 10; color: rgb(128, 128, 128); overflow-x: hidden; overflow-y: hidden; top: 163px; left: -3px; text-align: right; width: 24px; ">84.0</DIV><DIV style="position: absolute; font-size: 9px; z-index: 10; color: rgb(128, 128, 128); overflow-x: hidden; overflow-y: hidden; top: 109px; left: -3px; text-align: right; width: 24px; ">126.0</DIV><DIV style="position: absolute; font-size: 9px; z-index: 10; color: rgb(128, 128, 128); overflow-x: hidden; overflow-y: hidden; top: 55px; left: -3px; text-align: right; width: 24px; ">168.0</DIV><DIV style="position: absolute; font-size: 9px; z-index: 10; color: rgb(128, 128, 128); overflow-x: hidden; overflow-y: hidden; top: 1px; left: -3px; text-align: right; width: 24px; ">210.0</DIV><DIV style="position: absolute; font-size: 9px; z-index: 10; color: rgb(128, 128, 128); overflow-x: hidden; overflow-y: hidden; top: 283px; left: 12.448px; text-align: center; width: 50px; ">2005-01</DIV><DIV style="position: absolute; font-size: 9px; z-index: 10; color: rgb(128, 128, 128); overflow-x: hidden; overflow-y: hidden; top: 283px; left: 116.72px; text-align: center; width: 50px; ">2005-08</DIV><DIV style="position: absolute; font-size: 9px; z-index: 10; color: rgb(128, 128, 128); overflow-x: hidden; overflow-y: hidden; top: 283px; left: 220.992px; text-align: center; width: 50px; ">2006-03</DIV><DIV style="position: absolute; font-size: 9px; z-index: 10; color: rgb(128, 128, 128); overflow-x: hidden; overflow-y: hidden; top: 283px; left: 325.264px; text-align: center; width: 50px; ">2006-10</DIV><DIV style="position: absolute; font-size: 9px; z-index: 10; color: rgb(128, 128, 128); overflow-x: hidden; overflow-y: hidden; top: 283px; left: 429.536px; text-align: center; width: 50px; ">2007-05</DIV><DIV style="position: absolute; font-size: 9px; z-index: 10; color: rgb(128, 128, 128); overflow-x: hidden; overflow-y: hidden; top: 283px; left: 533.808px; text-align: center; width: 50px; ">2007-12</DIV><DIV style="position: absolute; font-size: 9px; z-index: 10; color: rgb(128, 128, 128); overflow-x: hidden; overflow-y: hidden; top: 283px; left: 638.08px; text-align: center; width: 50px; ">2008-07</DIV><DIV style="position: absolute; font-size: 9px; z-index: 10; color: rgb(128, 128, 128); overflow-x: hidden; overflow-y: hidden; top: 283px; left: 742.352px; text-align: center; width: 50px; ">2009-02</DIV></DIV>
									<BR>
									<CENTER><DIV id="legend_subclass"><TABLE class="legendcontainer" classname="legendcontainer"><THEAD><TFOOT><TBODY><TR><TD><DIV class="legendbox" classname="legendbox" style="background-color: rgb(42, 66, 105); "></DIV></TD><TD class="legendlabel" classname="legendlabel"></TD><TD><TD></TR></TBODY></TABLE></DIV></CENTER></TD>
									</TR></TBODY></TABLE></DIV>
									<SCRIPT type="text/javascript">
									<!--
									if (navigator.userAgent.indexOf('NT 5.0') == -1 || (navigator.userAgent.indexOf('MSIE 6') == -1 && navigator.userAgent.indexOf('MSIE 5') == -1)){
									var options_subclass = {
									"IECanvasHTC": "/js/iecanvas.htc",
									"colorScheme": PlotKit.Base.palette(PlotKit.Base.baseColors()[0]),
									"padding": {left: 30, right: 10, top: 10, bottom: 20},
									"xTicks": [{v:0, label:"2005-01"},{v:7, label:"2005-08"},{v:14, label:"2006-03"},{v:21, label:"2006-10"},{v:28, label:"2007-05"},{v:35, label:"2007-12"},{v:42, label:"2008-07"},{v:49, label:"2009-02"}],
									"drawYAxis": true
									};
									function drawBarGraph() {
									var layout = new PlotKit.Layout("bar", options_subclass);
									layout.addDataset("", [[0,80],[1,46],[2,121],[3,80],[4,99],[5,120],[6,106],[7,59],[8,122],[9,95],[10,76],[11,79],[12,114],[13,103],[14,111],[15,119],[16,115],[17,149],[18,111],[19,122],[20,91],[21,89],[22,104],[23,107],[24,100],[25,105],[26,147],[27,95],[28,142],[29,131],[30,113],[31,154],[32,145],[33,144],[34,138],[35,137],[36,174],[37,110],[38,167],[39,127],[40,197],[41,210],[42,194],[43,77],[44,10],[45,10],[46,7],[47,16],[48,13],[49,13],[50,10]]);
									layout.evaluate();
									var canvas = MochiKit.DOM.getElement("bg_subclass");
									var plotter = new PlotKit.SweetCanvasRenderer(canvas, layout, options_subclass);
									plotter.render();
									legend = new PTPlotLegend('legend_subclass', layout, plotter);
									legend.showLegend();
									}
									MochiKit.DOM.addLoadEvent(drawBarGraph);}
									//-->
									</SCRIPT>
									<BR>
								
<BR>

<DIV class="article_container" id="Comments_section">
 <P class="comment_info" style="font-size: 10pt;">User Contributions:</P>
 <DIV class="Comments_commentsbox" style=""></DIV> <P class="comment_info" style="font-size: 10pt;">Comment about this patent or add new information about this topic:</P><DIV class="Comments_form" id="Comments_form"><FORM action="http://www.faqs.org/patents/app/20080222114#Comments_form" method="post" onsubmit="return validate_form(this);"><DIV class="Comments_text"><LABEL for="Comments_text">Comment:&nbsp;&nbsp;<FONT style="font-size:7pt;color:Gray;">(50-4000 characters)</FONT></LABEL><TEXTAREA cols="40" rows="5" name="Comments[text]" id="Comments_text"></TEXTAREA></DIV><INPUT type="hidden" name="Comments[do]" value="add" style="display:none"><INPUT type="hidden" name="Comments[id]" value="1" style="display:none"><INPUT type="hidden" name="Comments[page]" value="/patents/app/20080222114" style="display:none"><DIV class="Comments_name"><LABEL for="Comments_name">Name:</LABEL><INPUT type="text" name="Comments[name]" value="" id="Comments_name"></DIV><DIV class="Comments_mail"><LABEL for="Comments_mail">E-mail:</LABEL><INPUT type="text" name="Comments[mail]" value="" id="Comments_mail"></DIV><DIV class="Comments_captcha"><LABEL for="Comments_captcha">Security Code:</LABEL><INPUT type="text" name="Comments[captcha]" value="" id="Comments_captcha"></DIV><DIV class="Comments_captcha" style="padding-top: 12px;"><INPUT type="hidden" name="Comments[code]" value=")2-." style="display:none"><IMG src="./0287 EFFICIENT DIRECTED ACYCLIC GRAPH REPRESENTATION - Patents_files/mtc.class.php" alt="CAPTCHA" class="Comments_captcha"></DIV><DIV class="Comments_captcha" style="padding-top: 22px;padding-left: 5px;"><INPUT type="submit" value="Send"> </DIV><BR></FORM></DIV></DIV>

  <TABLE align="center" cellpadding="10" style="border:1px solid #DEEBF8;background-color:#F5F8FF;width:700px;"><TBODY><TR>
    <TD><H2 class="menu1"><A href="http://www.faqs.org/patents/invl/a">Inventors list</A></H2></TD>
    <TD><H2 class="menu1"><A href="http://www.faqs.org/patents/agnl/a">Agents list</A></H2></TD>
    <TD><H2 class="menu1"><A href="http://www.faqs.org/patents/asnl/a">Assignees list</A></H2></TD>
    <TD><H2 class="menu1"><A href="http://www.faqs.org/patents/city/_all">List by place</A></H2></TD>
  </TR></TBODY></TABLE>
  <TABLE align="center" cellpadding="10" style="border:1px solid #F8DEDE;background-color:#FFF5F5;margin-top:10px;width:700px;"><TBODY><TR>
    <TD><H3 class="menu2"><A href="http://www.faqs.org/patents/class/_all">Classification tree browser</A></H3></TD>
    <TD><H3 class="menu2"><A href="http://www.faqs.org/patents/invl/00000">Top 100 Inventors</A></H3></TD>
    <TD><H3 class="menu2"><A href="http://www.faqs.org/patents/agnl/00000">Top 100 Agents</A></H3></TD>
    <TD><H3 class="menu2"><A href="http://www.faqs.org/patents/asnl/00000">Top 100 Assignees</A></H3></TD>
  </TR></TBODY></TABLE>
  <TABLE align="center" cellpadding="10" style="border:1px solid #F8DEDE;background-color:#FFF5F5;margin-top:10px;margin-bottom:20px;width:700px;"><TBODY><TR>
    <TD><H3 class="menu2"><A href="http://www.faqs.org/faqs/">Usenet FAQ Index</A></H3></TD>
    <TD><H3 class="menu2"><A href="http://www.faqs.org/docs/">Documents</A></H3></TD>
    <TD><H3 class="menu2"><A href="http://www.faqs.org/contrib/">Other FAQs</A></H3></TD>
  </TR></TBODY></TABLE>


</DIV>
<DIV style="font-size:7pt;color:gray;text-align:center;margin-top:20px;margin-bottom:5px;">
<BR>
</DIV> 


<SCRIPT type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</SCRIPT><SCRIPT src="./0287 EFFICIENT DIRECTED ACYCLIC GRAPH REPRESENTATION - Patents_files/ga.js" type="text/javascript"></SCRIPT>
<SCRIPT type="text/javascript">
var pageTracker = _gat._getTracker("UA-892232-19");
pageTracker._trackPageview();
</SCRIPT>




</BODY></HTML>
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * NewEditWorkspace.java
 *
 * Created on 2010-1-16, 9:27:28
 */
package com.jotov.versia.gui;

import com.jotov.versia.WorkEnvironment;
import com.jotov.versia.command.CommandFactory;
import com.jotov.versia.command.ICommand;
import com.jotov.versia.voInfo;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import org.jdesktop.application.Action;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

/**
 *
 * @author v
 */
public class ChangeVOHat extends javax.swing.JDialog {

    private String actionCommand;
    private WorkEnvironment we = WorkEnvironment.getWorkEnvironment();
    DefaultMutableTreeNode voRoot;
    DefaultTreeModel voModel;

    /** Creates new form NewEditWorkspace */
    public ChangeVOHat(java.awt.Frame parent) {
        super(parent, true);
        voRoot = new DefaultMutableTreeNode();
        voModel = new DefaultTreeModel(voRoot);
        initComponents();
        initVOTree();
    }

    public ChangeVOHat(java.awt.Frame parent, String strWorkspaceName) {
        super(parent, true);
        voRoot = new DefaultMutableTreeNode();
        voModel = new DefaultTreeModel(voRoot);
        initComponents();
        initVOTree();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlVersionedObjects = new javax.swing.JLabel();
        jspVersionedObjects = new javax.swing.JScrollPane();
        jtVersionedObjects = new javax.swing.JTree();
        jbOK = new javax.swing.JButton();
        jbCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setName("Form"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(desktopapplication1.DesktopApplication1.class).getContext().getResourceMap(ChangeVOHat.class);
        jlVersionedObjects.setText(resourceMap.getString("jlVersionedObjects.text")); // NOI18N
        jlVersionedObjects.setName("jlVersionedObjects"); // NOI18N

        jspVersionedObjects.setName("jspVersionedObjects"); // NOI18N

        jtVersionedObjects.setModel(voModel);
        jtVersionedObjects.setName("jtVersionedObjects"); // NOI18N
        jtVersionedObjects.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                jtVersionedObjectsValueChanged(evt);
            }
        });
        jspVersionedObjects.setViewportView(jtVersionedObjects);

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(desktopapplication1.DesktopApplication1.class).getContext().getActionMap(ChangeVOHat.class, this);
        jbOK.setAction(actionMap.get("doSave")); // NOI18N
        jbOK.setText(resourceMap.getString("jbOK.text")); // NOI18N
        jbOK.setActionCommand(resourceMap.getString("jbOK.actionCommand")); // NOI18N
        jbOK.setEnabled(false);
        jbOK.setName("jbOK"); // NOI18N

        jbCancel.setAction(actionMap.get("doCancel")); // NOI18N
        jbCancel.setText(resourceMap.getString("jbCancel.text")); // NOI18N
        jbCancel.setActionCommand(resourceMap.getString("jbCancel.actionCommand")); // NOI18N
        jbCancel.setName("jbCancel"); // NOI18N

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jlVersionedObjects)
                    .add(jspVersionedObjects, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jbCancel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jbOK, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(jlVersionedObjects)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jspVersionedObjects, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 152, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(layout.createSequentialGroup()
                        .add(jbOK)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jbCancel)))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtVersionedObjectsValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_jtVersionedObjectsValueChanged
        DefaultMutableTreeNode node = (DefaultMutableTreeNode) jtVersionedObjects.getLastSelectedPathComponent();
        if (node == null) {
            jbOK.setEnabled(false);
        } else {
            try {
                int voID = ((voInfo) node.getUserObject()).getVo_id();
                JSONObject currentVO = we.getCurrentVersionedObject();
                int currentVOID = currentVO.getInt("vo_id");
                int currentVOConstructs = currentVO.getInt("constructs");
                if (voID == currentVOID || voID == currentVOConstructs) {
                    jbOK.setEnabled(false);
                } else {
                    jbOK.setEnabled(true);
                }
            } catch (JSONException ex) {
                Logger.getLogger(ChangeVOHat.class.getName()).log(Level.SEVERE, null, ex);
                jbOK.setEnabled(false);
            }
        }
    }//GEN-LAST:event_jtVersionedObjectsValueChanged

    @Action
    public void doSave() {
        DefaultMutableTreeNode node = (DefaultMutableTreeNode) jtVersionedObjects.getLastSelectedPathComponent();
        if (Object.class.isInstance(node)) {
            try {
                int voID = ((voInfo) node.getUserObject()).getVo_id();
                HashMap params = new HashMap();
                JSONObject vo = we.getCurrentVersionedObject();
                params.put("vo_id", vo.getInt("vo_id"));
                params.put("vo_name", vo.getString("vo_name"));
                params.put("vo_datum", vo.getString("vo_datum"));
                params.put("type", vo.getInt("type"));
                params.put("constructs", voID);
                try {
                    CommandFactory cf = new CommandFactory();
                    ICommand cmd = cf.createCommand(CommandFactory.CmdCode.SAVE_VERSIONED_OBJECT);
                    cmd.setParameters(params);
                    JSONObject result = (JSONObject) cmd.doRequest();
                } catch (JSONException ex) {
                    Logger.getLogger(ChangeVOHat.class.getName()).log(Level.SEVERE, null, ex);
                }
            } catch (JSONException ex) {
                Logger.getLogger(ChangeVOHat.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            jbOK.setEnabled(false);
        }
    dispose();
}

@Action
    public

void doCancel() {
        actionCommand = jbCancel.getActionCommand();
        dispose(

);


}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jbCancel;
    private javax.swing.JButton jbOK;
    private javax.swing.JLabel jlVersionedObjects;
    private javax.swing.JScrollPane jspVersionedObjects;
    private javax.swing.JTree jtVersionedObjects;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the actionCommand
     */
    public String

getActionCommand() {
        return actionCommand;


}

    private void initVOTree() {
        try {
            JSONArray objectArray = we.getVersionedObject_ls();
            voRoot.

removeAllChildren();



int pr_len = objectArray.length();
            JSONObject

tmpVO;
            DefaultMutableTreeNode

tmpNode, tmpNode2 = null;
            String

val;
            Map

voMap = new HashMap();
            voRoot.

setUserObject(new voInfo("No Hat", 0, 0));


for (int i = 0; i

< pr_len; i++

) {
                tmpVO = (JSONObject) objectArray.get(i);
                val

= tmpVO.getString("vo_name") + " - " + we.getVisibilityVectorString(tmpVO.getInt("v_vector"));
                voInfo

voInfo = new voInfo(val, tmpVO.getInt("vo_id"), i+1);



int constructs = tmpVO.getInt("constructs");


if (constructs == 0) {
                    tmpNode = new DefaultMutableTreeNode(voInfo);
                    voRoot.

add(tmpNode);
                    voMap.

put(voInfo.getVo_id(), tmpNode);


} else {
                    tmpNode = new DefaultMutableTreeNode(voInfo);
                    tmpNode2

= (DefaultMutableTreeNode) voMap.get(new Integer(constructs));
                    tmpNode2.

add(tmpNode);
                    voMap.

put(voInfo.getVo_id(), tmpNode);


}
            }
            ((DefaultTreeModel) jtVersionedObjects.getModel()).reload();



}

catch (JSONException ex) {
            Logger.getLogger(ChangeVOHat.class.getName()).log(Level.SEVERE, null, ex);
        }

}
}
